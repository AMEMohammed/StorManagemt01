//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Out_.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Iservice")]
    public interface Iservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUserNameBYIdUser", ReplyAction="http://tempuri.org/Iservice/GetUserNameBYIdUserResponse")]
        string GetUserNameBYIdUser(int IdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUserNameBYIdUser", ReplyAction="http://tempuri.org/Iservice/GetUserNameBYIdUserResponse")]
        System.Threading.Tasks.Task<string> GetUserNameBYIdUserAsync(int IdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetRequstOutSngle", ReplyAction="http://tempuri.org/Iservice/GetRequstOutSngleResponse")]
        System.IO.MemoryStream GetRequstOutSngle(int IDOutRequst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetRequstOutSngle", ReplyAction="http://tempuri.org/Iservice/GetRequstOutSngleResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetRequstOutSngleAsync(int IDOutRequst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewUpdOut", ReplyAction="http://tempuri.org/Iservice/AddNewUpdOutResponse")]
        int AddNewUpdOut(int IDOut, int IdCate, int IdType, int IdPlace, int Quntity, string NameOUt, string NameSend, int Price, int IdCurrent, string TxtReson, System.DateTime DateUpdate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewUpdOut", ReplyAction="http://tempuri.org/Iservice/AddNewUpdOutResponse")]
        System.Threading.Tasks.Task<int> AddNewUpdOutAsync(int IDOut, int IdCate, int IdType, int IdPlace, int Quntity, string NameOUt, string NameSend, int Price, int IdCurrent, string TxtReson, System.DateTime DateUpdate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccountIsHere", ReplyAction="http://tempuri.org/Iservice/CheckAccountIsHereResponse")]
        int CheckAccountIsHere(int IDCategory, int IDType, int price, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccountIsHere", ReplyAction="http://tempuri.org/Iservice/CheckAccountIsHereResponse")]
        System.Threading.Tasks.Task<int> CheckAccountIsHereAsync(int IDCategory, int IDType, int price, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteRqustOut", ReplyAction="http://tempuri.org/Iservice/DeleteRqustOutResponse")]
        int DeleteRqustOut(int IdRequstOut, int IdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteRqustOut", ReplyAction="http://tempuri.org/Iservice/DeleteRqustOutResponse")]
        System.Threading.Tasks.Task<int> DeleteRqustOutAsync(int IdRequstOut, int IdUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateRequstOut", ReplyAction="http://tempuri.org/Iservice/UpdateRequstOutResponse")]
        int UpdateRequstOut(int IDOut, int IdPlace, string NameOut, string NameSend, string Reson, System.DateTime d1, int UserId, int debt, int crd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateRequstOut", ReplyAction="http://tempuri.org/Iservice/UpdateRequstOutResponse")]
        System.Threading.Tasks.Task<int> UpdateRequstOutAsync(int IDOut, int IdPlace, string NameOut, string NameSend, string Reson, System.DateTime d1, int UserId, int debt, int crd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMAxIDOUt", ReplyAction="http://tempuri.org/Iservice/GetMAxIDOUtResponse")]
        int GetMAxIDOUt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMAxIDOUt", ReplyAction="http://tempuri.org/Iservice/GetMAxIDOUtResponse")]
        System.Threading.Tasks.Task<int> GetMAxIDOUtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetALLAcountNm", ReplyAction="http://tempuri.org/Iservice/GetALLAcountNmResponse")]
        System.IO.MemoryStream GetALLAcountNm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetALLAcountNm", ReplyAction="http://tempuri.org/Iservice/GetALLAcountNmResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetALLAcountNmAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccontTotalInOut", ReplyAction="http://tempuri.org/Iservice/CheckAccontTotalInOutResponse")]
        bool CheckAccontTotalInOut(int IDcode, int IDCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccontTotalInOut", ReplyAction="http://tempuri.org/Iservice/CheckAccontTotalInOutResponse")]
        System.Threading.Tasks.Task<bool> CheckAccontTotalInOutAsync(int IDcode, int IDCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountTotalInOut", ReplyAction="http://tempuri.org/Iservice/AddNewAccountTotalInOutResponse")]
        int AddNewAccountTotalInOut(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountTotalInOut", ReplyAction="http://tempuri.org/Iservice/AddNewAccountTotalInOutResponse")]
        System.Threading.Tasks.Task<int> AddNewAccountTotalInOutAsync(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceInOut", ReplyAction="http://tempuri.org/Iservice/GetBalanceInOutResponse")]
        int GetBalanceInOut(int Idcode, int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceInOut", ReplyAction="http://tempuri.org/Iservice/GetBalanceInOutResponse")]
        System.Threading.Tasks.Task<int> GetBalanceInOutAsync(int Idcode, int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountTotalInOut", ReplyAction="http://tempuri.org/Iservice/UpdateAccountTotalInOutResponse")]
        int UpdateAccountTotalInOut(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountTotalInOut", ReplyAction="http://tempuri.org/Iservice/UpdateAccountTotalInOutResponse")]
        System.Threading.Tasks.Task<int> UpdateAccountTotalInOutAsync(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountDetalisInOut", ReplyAction="http://tempuri.org/Iservice/AddNewAccountDetalisInOutResponse")]
        int AddNewAccountDetalisInOut(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idcurrn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountDetalisInOut", ReplyAction="http://tempuri.org/Iservice/AddNewAccountDetalisInOutResponse")]
        System.Threading.Tasks.Task<int> AddNewAccountDetalisInOutAsync(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idcurrn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis", ReplyAction="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalisResponse")]
        int DeleteSuuplyFrmAccountDitalis(int idSupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis", ReplyAction="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalisResponse")]
        System.Threading.Tasks.Task<int> DeleteSuuplyFrmAccountDitalisAsync(int idSupply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis2", ReplyAction="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis2Response")]
        int DeleteSuuplyFrmAccountDitalis2(int idout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis2", ReplyAction="http://tempuri.org/Iservice/DeleteSuuplyFrmAccountDitalis2Response")]
        System.Threading.Tasks.Task<int> DeleteSuuplyFrmAccountDitalis2Async(int idout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetIDAccountPalce", ReplyAction="http://tempuri.org/Iservice/GetIDAccountPalceResponse")]
        int GetIDAccountPalce(int IDACcount, int idplace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetIDAccountPalce", ReplyAction="http://tempuri.org/Iservice/GetIDAccountPalceResponse")]
        System.Threading.Tasks.Task<int> GetIDAccountPalceAsync(int IDACcount, int idplace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SENDUSERTOSERVER", ReplyAction="http://tempuri.org/Iservice/SENDUSERTOSERVERResponse")]
        void SENDUSERTOSERVER(int falg, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SENDUSERTOSERVER", ReplyAction="http://tempuri.org/Iservice/SENDUSERTOSERVERResponse")]
        System.Threading.Tasks.Task SENDUSERTOSERVERAsync(int falg, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/LoginUser", ReplyAction="http://tempuri.org/Iservice/LoginUserResponse")]
        int LoginUser(string User, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/LoginUser", ReplyAction="http://tempuri.org/Iservice/LoginUserResponse")]
        System.Threading.Tasks.Task<int> LoginUserAsync(string User, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewUser", ReplyAction="http://tempuri.org/Iservice/AddNewUserResponse")]
        int AddNewUser(
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place, 
                    int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewUser", ReplyAction="http://tempuri.org/Iservice/AddNewUserResponse")]
        System.Threading.Tasks.Task<int> AddNewUserAsync(
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place, 
                    int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpatePassword", ReplyAction="http://tempuri.org/Iservice/UpatePasswordResponse")]
        int UpatePassword(int idUser, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpatePassword", ReplyAction="http://tempuri.org/Iservice/UpatePasswordResponse")]
        System.Threading.Tasks.Task<int> UpatePasswordAsync(int idUser, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdUsers", ReplyAction="http://tempuri.org/Iservice/UpdUsersResponse")]
        int UpdUsers(
                    int IDUser, 
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdUsers", ReplyAction="http://tempuri.org/Iservice/UpdUsersResponse")]
        System.Threading.Tasks.Task<int> UpdUsersAsync(
                    int IDUser, 
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllUser", ReplyAction="http://tempuri.org/Iservice/GetAllUserResponse")]
        System.IO.MemoryStream GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllUser", ReplyAction="http://tempuri.org/Iservice/GetAllUserResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUser", ReplyAction="http://tempuri.org/Iservice/GetUserResponse")]
        System.IO.MemoryStream GetUser(int IdUs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUser", ReplyAction="http://tempuri.org/Iservice/GetUserResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetUserAsync(int IdUs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllAccount", ReplyAction="http://tempuri.org/Iservice/GetAllAccountResponse")]
        System.IO.MemoryStream GetAllAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllAccount", ReplyAction="http://tempuri.org/Iservice/GetAllAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllAcountnAr", ReplyAction="http://tempuri.org/Iservice/GetAllAcountnArResponse")]
        System.IO.MemoryStream GetAllAcountnAr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllAcountnAr", ReplyAction="http://tempuri.org/Iservice/GetAllAcountnArResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllAcountnArAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountNm", ReplyAction="http://tempuri.org/Iservice/UpdateAccountNmResponse")]
        int UpdateAccountNm(int iDAccounNm, string Name, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountNm", ReplyAction="http://tempuri.org/Iservice/UpdateAccountNmResponse")]
        System.Threading.Tasks.Task<int> UpdateAccountNmAsync(int iDAccounNm, string Name, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccountinDetlis", ReplyAction="http://tempuri.org/Iservice/CheckAccountinDetlisResponse")]
        bool CheckAccountinDetlis(int idcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccountinDetlis", ReplyAction="http://tempuri.org/Iservice/CheckAccountinDetlisResponse")]
        System.Threading.Tasks.Task<bool> CheckAccountinDetlisAsync(int idcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccounthaschalid", ReplyAction="http://tempuri.org/Iservice/CheckAccounthaschalidResponse")]
        bool CheckAccounthaschalid(int idcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccounthaschalid", ReplyAction="http://tempuri.org/Iservice/CheckAccounthaschalidResponse")]
        System.Threading.Tasks.Task<bool> CheckAccounthaschalidAsync(int idcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/TypeAccount", ReplyAction="http://tempuri.org/Iservice/TypeAccountResponse")]
        string TypeAccount(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/TypeAccount", ReplyAction="http://tempuri.org/Iservice/TypeAccountResponse")]
        System.Threading.Tasks.Task<string> TypeAccountAsync(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCheckAccount", ReplyAction="http://tempuri.org/Iservice/GetCheckAccountResponse")]
        bool GetCheckAccount(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCheckAccount", ReplyAction="http://tempuri.org/Iservice/GetCheckAccountResponse")]
        System.Threading.Tasks.Task<bool> GetCheckAccountAsync(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCheckAccountHere", ReplyAction="http://tempuri.org/Iservice/GetCheckAccountHereResponse")]
        bool GetCheckAccountHere(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCheckAccountHere", ReplyAction="http://tempuri.org/Iservice/GetCheckAccountHereResponse")]
        System.Threading.Tasks.Task<bool> GetCheckAccountHereAsync(int IDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxCode", ReplyAction="http://tempuri.org/Iservice/GetMaxCodeResponse")]
        int GetMaxCode(int CodeParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxCode", ReplyAction="http://tempuri.org/Iservice/GetMaxCodeResponse")]
        System.Threading.Tasks.Task<int> GetMaxCodeAsync(int CodeParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAcountNm", ReplyAction="http://tempuri.org/Iservice/AddNewAcountNmResponse")]
        int AddNewAcountNm(string AcountNm, int IdCOde, int IdParnt, string Type, int Active, System.DateTime DateStart, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAcountNm", ReplyAction="http://tempuri.org/Iservice/AddNewAcountNmResponse")]
        System.Threading.Tasks.Task<int> AddNewAcountNmAsync(string AcountNm, int IdCOde, int IdParnt, string Type, int Active, System.DateTime DateStart, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DelteAccount", ReplyAction="http://tempuri.org/Iservice/DelteAccountResponse")]
        int DelteAccount(int IDCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DelteAccount", ReplyAction="http://tempuri.org/Iservice/DelteAccountResponse")]
        System.Threading.Tasks.Task<int> DelteAccountAsync(int IDCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DelteAccount2", ReplyAction="http://tempuri.org/Iservice/DelteAccount2Response")]
        int DelteAccount2(int IDcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/DelteAccount2", ReplyAction="http://tempuri.org/Iservice/DelteAccount2Response")]
        System.Threading.Tasks.Task<int> DelteAccount2Async(int IDcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchAcount", ReplyAction="http://tempuri.org/Iservice/SearchAcountResponse")]
        System.IO.MemoryStream SearchAcount(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchAcount", ReplyAction="http://tempuri.org/Iservice/SearchAcountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> SearchAcountAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETALLAccountPrime", ReplyAction="http://tempuri.org/Iservice/GETALLAccountPrimeResponse")]
        System.IO.MemoryStream GETALLAccountPrime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETALLAccountPrime", ReplyAction="http://tempuri.org/Iservice/GETALLAccountPrimeResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GETALLAccountPrimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETALLAccountSub", ReplyAction="http://tempuri.org/Iservice/GETALLAccountSubResponse")]
        System.IO.MemoryStream GETALLAccountSub();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETALLAccountSub", ReplyAction="http://tempuri.org/Iservice/GETALLAccountSubResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GETALLAccountSubAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllCurrency", ReplyAction="http://tempuri.org/Iservice/GetAllCurrencyResponse")]
        System.IO.MemoryStream GetAllCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllCurrency", ReplyAction="http://tempuri.org/Iservice/GetAllCurrencyResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCurrencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceAccount", ReplyAction="http://tempuri.org/Iservice/GetBalanceAccountResponse")]
        System.IO.MemoryStream GetBalanceAccount(int IDcode, int IDCurrncy, string NmIDcurrmcy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceAccount", ReplyAction="http://tempuri.org/Iservice/GetBalanceAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceAccountAsync(int IDcode, int IDCurrncy, string NmIDcurrmcy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceAccountALLCunncy", ReplyAction="http://tempuri.org/Iservice/GetBalanceAccountALLCunncyResponse")]
        System.IO.MemoryStream GetBalanceAccountALLCunncy(int IDcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceAccountALLCunncy", ReplyAction="http://tempuri.org/Iservice/GetBalanceAccountALLCunncyResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceAccountALLCunncyAsync(int IDcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETNMCurrncy", ReplyAction="http://tempuri.org/Iservice/GETNMCurrncyResponse")]
        string GETNMCurrncy(int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETNMCurrncy", ReplyAction="http://tempuri.org/Iservice/GETNMCurrncyResponse")]
        System.Threading.Tasks.Task<string> GETNMCurrncyAsync(int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceALLAccountALLCunncy", ReplyAction="http://tempuri.org/Iservice/GetBalanceALLAccountALLCunncyResponse")]
        System.IO.MemoryStream GetBalanceALLAccountALLCunncy(int idcurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalanceALLAccountALLCunncy", ReplyAction="http://tempuri.org/Iservice/GetBalanceALLAccountALLCunncyResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceALLAccountALLCunncyAsync(int idcurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETNMAccount", ReplyAction="http://tempuri.org/Iservice/GETNMAccountResponse")]
        System.IO.MemoryStream GETNMAccount(int IDCOde);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETNMAccount", ReplyAction="http://tempuri.org/Iservice/GETNMAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GETNMAccountAsync(int IDCOde);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETAccountDitalis", ReplyAction="http://tempuri.org/Iservice/GETAccountDitalisResponse")]
        System.IO.MemoryStream GETAccountDitalis(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETAccountDitalis", ReplyAction="http://tempuri.org/Iservice/GETAccountDitalisResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GETAccountDitalisAsync(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/getOldMony", ReplyAction="http://tempuri.org/Iservice/getOldMonyResponse")]
        int getOldMony(int IDcode, int IDCurnncy, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/getOldMony", ReplyAction="http://tempuri.org/Iservice/getOldMonyResponse")]
        System.Threading.Tasks.Task<int> getOldMonyAsync(int IDcode, int IDCurnncy, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETAcountDitlis", ReplyAction="http://tempuri.org/Iservice/GETAcountDitlisResponse")]
        System.IO.MemoryStream GETAcountDitlis(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GETAcountDitlis", ReplyAction="http://tempuri.org/Iservice/GETAcountDitlisResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GETAcountDitlisAsync(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUserNM", ReplyAction="http://tempuri.org/Iservice/GetUserNMResponse")]
        string GetUserNM(int IDuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetUserNM", ReplyAction="http://tempuri.org/Iservice/GetUserNMResponse")]
        System.Threading.Tasks.Task<string> GetUserNMAsync(int IDuser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetGroupsAsAccounts", ReplyAction="http://tempuri.org/Iservice/GetGroupsAsAccountsResponse")]
        System.IO.MemoryStream GetGroupsAsAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetGroupsAsAccounts", ReplyAction="http://tempuri.org/Iservice/GetGroupsAsAccountsResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetGroupsAsAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountesMOnayInGroup", ReplyAction="http://tempuri.org/Iservice/GetAccountesMOnayInGroupResponse")]
        System.IO.MemoryStream GetAccountesMOnayInGroup(int IDGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountesMOnayInGroup", ReplyAction="http://tempuri.org/Iservice/GetAccountesMOnayInGroupResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAccountesMOnayInGroupAsync(int IDGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccontTotal", ReplyAction="http://tempuri.org/Iservice/CheckAccontTotalResponse")]
        bool CheckAccontTotal(int IDcode, int IDCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/CheckAccontTotal", ReplyAction="http://tempuri.org/Iservice/CheckAccontTotalResponse")]
        System.Threading.Tasks.Task<bool> CheckAccontTotalAsync(int IDcode, int IDCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalance", ReplyAction="http://tempuri.org/Iservice/GetBalanceResponse")]
        int GetBalance(int Idcode, int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetBalance", ReplyAction="http://tempuri.org/Iservice/GetBalanceResponse")]
        System.Threading.Tasks.Task<int> GetBalanceAsync(int Idcode, int IDCur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountTotal", ReplyAction="http://tempuri.org/Iservice/UpdateAccountTotalResponse")]
        int UpdateAccountTotal(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateAccountTotal", ReplyAction="http://tempuri.org/Iservice/UpdateAccountTotalResponse")]
        System.Threading.Tasks.Task<int> UpdateAccountTotalAsync(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountTotal", ReplyAction="http://tempuri.org/Iservice/AddNewAccountTotalResponse")]
        int AddNewAccountTotal(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountTotal", ReplyAction="http://tempuri.org/Iservice/AddNewAccountTotalResponse")]
        System.Threading.Tasks.Task<int> AddNewAccountTotalAsync(int IDCOde, int Mony, int idCurrncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountDetalis", ReplyAction="http://tempuri.org/Iservice/AddNewAccountDetalisResponse")]
        int AddNewAccountDetalis(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idCurrnt, int IDSimple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewAccountDetalis", ReplyAction="http://tempuri.org/Iservice/AddNewAccountDetalisResponse")]
        System.Threading.Tasks.Task<int> AddNewAccountDetalisAsync(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idCurrnt, int IDSimple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddSimpleConstraint", ReplyAction="http://tempuri.org/Iservice/AddSimpleConstraintResponse")]
        int AddSimpleConstraint(int IDdaan, int IdMAden, int Mony, int idCurnncy, int UserId, System.DateTime datetime, string Note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddSimpleConstraint", ReplyAction="http://tempuri.org/Iservice/AddSimpleConstraintResponse")]
        System.Threading.Tasks.Task<int> AddSimpleConstraintAsync(int IDdaan, int IdMAden, int Mony, int idCurnncy, int UserId, System.DateTime datetime, string Note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxIDSimpleConstraint", ReplyAction="http://tempuri.org/Iservice/GetMaxIDSimpleConstraintResponse")]
        int GetMaxIDSimpleConstraint();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxIDSimpleConstraint", ReplyAction="http://tempuri.org/Iservice/GetMaxIDSimpleConstraintResponse")]
        System.Threading.Tasks.Task<int> GetMaxIDSimpleConstraintAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllSimpleConstraintOneDay", ReplyAction="http://tempuri.org/Iservice/GetAllSimpleConstraintOneDayResponse")]
        System.IO.MemoryStream GetAllSimpleConstraintOneDay(System.DateTime day1, System.DateTime day2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllSimpleConstraintOneDay", ReplyAction="http://tempuri.org/Iservice/GetAllSimpleConstraintOneDayResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllSimpleConstraintOneDayAsync(System.DateTime day1, System.DateTime day2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/PrintRequstOut", ReplyAction="http://tempuri.org/Iservice/PrintRequstOutResponse")]
        System.IO.MemoryStream PrintRequstOut(int Check, int UserId, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/PrintRequstOut", ReplyAction="http://tempuri.org/Iservice/PrintRequstOutResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> PrintRequstOutAsync(int Check, int UserId, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/printrequstOutExit", ReplyAction="http://tempuri.org/Iservice/printrequstOutExitResponse")]
        System.IO.MemoryStream printrequstOutExit(int Check, int UserId, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/printrequstOutExit", ReplyAction="http://tempuri.org/Iservice/printrequstOutExitResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> printrequstOutExitAsync(int Check, int UserId, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetIdUser", ReplyAction="http://tempuri.org/Iservice/GetIdUserResponse")]
        int GetIdUser(string NameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetIdUser", ReplyAction="http://tempuri.org/Iservice/GetIdUserResponse")]
        System.Threading.Tasks.Task<int> GetIdUserAsync(string NameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCatagoryInAccount", ReplyAction="http://tempuri.org/Iservice/GetCatagoryInAccountResponse")]
        System.IO.MemoryStream GetCatagoryInAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCatagoryInAccount", ReplyAction="http://tempuri.org/Iservice/GetCatagoryInAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetCatagoryInAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountLinkCate", ReplyAction="http://tempuri.org/Iservice/GetAccountLinkCateResponse")]
        int GetAccountLinkCate(int IDcate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountLinkCate", ReplyAction="http://tempuri.org/Iservice/GetAccountLinkCateResponse")]
        System.Threading.Tasks.Task<int> GetAccountLinkCateAsync(int IDcate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllPlace", ReplyAction="http://tempuri.org/Iservice/GetAllPlaceResponse")]
        System.IO.MemoryStream GetAllPlace();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllPlace", ReplyAction="http://tempuri.org/Iservice/GetAllPlaceResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllPlaceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllDebit", ReplyAction="http://tempuri.org/Iservice/GetAllDebitResponse")]
        System.IO.MemoryStream GetAllDebit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllDebit", ReplyAction="http://tempuri.org/Iservice/GetAllDebitResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllDebitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllCreditor", ReplyAction="http://tempuri.org/Iservice/GetAllCreditorResponse")]
        System.IO.MemoryStream GetAllCreditor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAllCreditor", ReplyAction="http://tempuri.org/Iservice/GetAllCreditorResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCreditorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequstOutDate", ReplyAction="http://tempuri.org/Iservice/SearchINRequstOutDateResponse")]
        System.IO.MemoryStream SearchINRequstOutDate(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequstOutDate", ReplyAction="http://tempuri.org/Iservice/SearchINRequstOutDateResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequstOutDateAsync(System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetTypeInAccount", ReplyAction="http://tempuri.org/Iservice/GetTypeInAccountResponse")]
        System.IO.MemoryStream GetTypeInAccount(int IdCate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetTypeInAccount", ReplyAction="http://tempuri.org/Iservice/GetTypeInAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetTypeInAccountAsync(int IdCate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCurrencyINAccount", ReplyAction="http://tempuri.org/Iservice/GetCurrencyINAccountResponse")]
        System.IO.MemoryStream GetCurrencyINAccount(int idcat, int idtyp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetCurrencyINAccount", ReplyAction="http://tempuri.org/Iservice/GetCurrencyINAccountResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetCurrencyINAccountAsync(int idcat, int idtyp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountIDs", ReplyAction="http://tempuri.org/Iservice/GetAccountIDsResponse")]
        System.IO.MemoryStream GetAccountIDs(int IdCAte, int IdTpe, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAccountIDs", ReplyAction="http://tempuri.org/Iservice/GetAccountIDsResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> GetAccountIDsAsync(int IdCAte, int IdTpe, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxCheckInRequsetOut", ReplyAction="http://tempuri.org/Iservice/GetMaxCheckInRequsetOutResponse")]
        int GetMaxCheckInRequsetOut();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetMaxCheckInRequsetOut", ReplyAction="http://tempuri.org/Iservice/GetMaxCheckInRequsetOutResponse")]
        System.Threading.Tasks.Task<int> GetMaxCheckInRequsetOutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetQuntityInAccount", ReplyAction="http://tempuri.org/Iservice/GetQuntityInAccountResponse")]
        int GetQuntityInAccount(int IDAcount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetQuntityInAccount", ReplyAction="http://tempuri.org/Iservice/GetQuntityInAccountResponse")]
        System.Threading.Tasks.Task<int> GetQuntityInAccountAsync(int IDAcount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetPriceAccount", ReplyAction="http://tempuri.org/Iservice/GetPriceAccountResponse")]
        int GetPriceAccount(int iDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetPriceAccount", ReplyAction="http://tempuri.org/Iservice/GetPriceAccountResponse")]
        System.Threading.Tasks.Task<int> GetPriceAccountAsync(int iDAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateQuntityAccount", ReplyAction="http://tempuri.org/Iservice/UpdateQuntityAccountResponse")]
        int UpdateQuntityAccount(int IDAccount, int newquntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/UpdateQuntityAccount", ReplyAction="http://tempuri.org/Iservice/UpdateQuntityAccountResponse")]
        System.Threading.Tasks.Task<int> UpdateQuntityAccountAsync(int IDAccount, int newquntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewRequstOut", ReplyAction="http://tempuri.org/Iservice/AddNewRequstOutResponse")]
        int AddNewRequstOut(int Quntity, int IDCategory, int IDType, int idcurrnt, int IDPlace, string NameOut, string DesOut, System.DateTime DateOut, int Chack, string NameSend, int price, int UserId, int debit, int cred);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/AddNewRequstOut", ReplyAction="http://tempuri.org/Iservice/AddNewRequstOutResponse")]
        System.Threading.Tasks.Task<int> AddNewRequstOutAsync(int Quntity, int IDCategory, int IDType, int idcurrnt, int IDPlace, string NameOut, string DesOut, System.DateTime DateOut, int Chack, string NameSend, int price, int UserId, int debit, int cred);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAndCheckQuntityAccountAndAddRqustNew", ReplyAction="http://tempuri.org/Iservice/GetAndCheckQuntityAccountAndAddRqustNewResponse")]
        int GetAndCheckQuntityAccountAndAddRqustNew(
                    int IDAccount, 
                    int QuntityMust, 
                    int IDCategory, 
                    int IDType, 
                    int idcurrn, 
                    int IDPlace, 
                    string NameOut, 
                    string DesOut, 
                    System.DateTime DateOut, 
                    int Chack, 
                    string NameSend, 
                    int debit, 
                    int credi, 
                    int UserId, 
                    string NMIDCA, 
                    string NMTYpe, 
                    string NMPlus, 
                    string NMMins, 
                    string nmCurnncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetAndCheckQuntityAccountAndAddRqustNew", ReplyAction="http://tempuri.org/Iservice/GetAndCheckQuntityAccountAndAddRqustNewResponse")]
        System.Threading.Tasks.Task<int> GetAndCheckQuntityAccountAndAddRqustNewAsync(
                    int IDAccount, 
                    int QuntityMust, 
                    int IDCategory, 
                    int IDType, 
                    int idcurrn, 
                    int IDPlace, 
                    string NameOut, 
                    string DesOut, 
                    System.DateTime DateOut, 
                    int Chack, 
                    string NameSend, 
                    int debit, 
                    int credi, 
                    int UserId, 
                    string NMIDCA, 
                    string NMTYpe, 
                    string NMPlus, 
                    string NMMins, 
                    string nmCurnncy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetQunitiyinAccount2", ReplyAction="http://tempuri.org/Iservice/GetQunitiyinAccount2Response")]
        int GetQunitiyinAccount2(int Idcae, int IdType, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/GetQunitiyinAccount2", ReplyAction="http://tempuri.org/Iservice/GetQunitiyinAccount2Response")]
        System.Threading.Tasks.Task<int> GetQunitiyinAccount2Async(int Idcae, int IdType, int idcurrnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOuttxt", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOuttxtResponse")]
        System.IO.MemoryStream SearchINRequsetOuttxt(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOuttxt", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOuttxtResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOuttxtAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDateResponse")]
        System.IO.MemoryStream SearchINRequsetOutTxtAndDate(int s, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDateResponse")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOutTxtAndDateAsync(int s, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate2", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate2Response")]
        System.IO.MemoryStream SearchINRequsetOutTxtAndDate2(string s, System.DateTime d1, System.DateTime d2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate2", ReplyAction="http://tempuri.org/Iservice/SearchINRequsetOutTxtAndDate2Response")]
        System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOutTxtAndDate2Async(string s, System.DateTime d1, System.DateTime d2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IserviceChannel : Out_.ServiceReference1.Iservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IserviceClient : System.ServiceModel.ClientBase<Out_.ServiceReference1.Iservice>, Out_.ServiceReference1.Iservice {
        
        public IserviceClient() {
        }
        
        public IserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetUserNameBYIdUser(int IdUser) {
            return base.Channel.GetUserNameBYIdUser(IdUser);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameBYIdUserAsync(int IdUser) {
            return base.Channel.GetUserNameBYIdUserAsync(IdUser);
        }
        
        public System.IO.MemoryStream GetRequstOutSngle(int IDOutRequst) {
            return base.Channel.GetRequstOutSngle(IDOutRequst);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetRequstOutSngleAsync(int IDOutRequst) {
            return base.Channel.GetRequstOutSngleAsync(IDOutRequst);
        }
        
        public int AddNewUpdOut(int IDOut, int IdCate, int IdType, int IdPlace, int Quntity, string NameOUt, string NameSend, int Price, int IdCurrent, string TxtReson, System.DateTime DateUpdate, int UserId) {
            return base.Channel.AddNewUpdOut(IDOut, IdCate, IdType, IdPlace, Quntity, NameOUt, NameSend, Price, IdCurrent, TxtReson, DateUpdate, UserId);
        }
        
        public System.Threading.Tasks.Task<int> AddNewUpdOutAsync(int IDOut, int IdCate, int IdType, int IdPlace, int Quntity, string NameOUt, string NameSend, int Price, int IdCurrent, string TxtReson, System.DateTime DateUpdate, int UserId) {
            return base.Channel.AddNewUpdOutAsync(IDOut, IdCate, IdType, IdPlace, Quntity, NameOUt, NameSend, Price, IdCurrent, TxtReson, DateUpdate, UserId);
        }
        
        public int CheckAccountIsHere(int IDCategory, int IDType, int price, int idcurrnt) {
            return base.Channel.CheckAccountIsHere(IDCategory, IDType, price, idcurrnt);
        }
        
        public System.Threading.Tasks.Task<int> CheckAccountIsHereAsync(int IDCategory, int IDType, int price, int idcurrnt) {
            return base.Channel.CheckAccountIsHereAsync(IDCategory, IDType, price, idcurrnt);
        }
        
        public int DeleteRqustOut(int IdRequstOut, int IdUser) {
            return base.Channel.DeleteRqustOut(IdRequstOut, IdUser);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRqustOutAsync(int IdRequstOut, int IdUser) {
            return base.Channel.DeleteRqustOutAsync(IdRequstOut, IdUser);
        }
        
        public int UpdateRequstOut(int IDOut, int IdPlace, string NameOut, string NameSend, string Reson, System.DateTime d1, int UserId, int debt, int crd) {
            return base.Channel.UpdateRequstOut(IDOut, IdPlace, NameOut, NameSend, Reson, d1, UserId, debt, crd);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRequstOutAsync(int IDOut, int IdPlace, string NameOut, string NameSend, string Reson, System.DateTime d1, int UserId, int debt, int crd) {
            return base.Channel.UpdateRequstOutAsync(IDOut, IdPlace, NameOut, NameSend, Reson, d1, UserId, debt, crd);
        }
        
        public int GetMAxIDOUt() {
            return base.Channel.GetMAxIDOUt();
        }
        
        public System.Threading.Tasks.Task<int> GetMAxIDOUtAsync() {
            return base.Channel.GetMAxIDOUtAsync();
        }
        
        public System.IO.MemoryStream GetALLAcountNm() {
            return base.Channel.GetALLAcountNm();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetALLAcountNmAsync() {
            return base.Channel.GetALLAcountNmAsync();
        }
        
        public bool CheckAccontTotalInOut(int IDcode, int IDCurrncy) {
            return base.Channel.CheckAccontTotalInOut(IDcode, IDCurrncy);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccontTotalInOutAsync(int IDcode, int IDCurrncy) {
            return base.Channel.CheckAccontTotalInOutAsync(IDcode, IDCurrncy);
        }
        
        public int AddNewAccountTotalInOut(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.AddNewAccountTotalInOut(IDCOde, Mony, idCurrncy);
        }
        
        public System.Threading.Tasks.Task<int> AddNewAccountTotalInOutAsync(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.AddNewAccountTotalInOutAsync(IDCOde, Mony, idCurrncy);
        }
        
        public int GetBalanceInOut(int Idcode, int IDCur) {
            return base.Channel.GetBalanceInOut(Idcode, IDCur);
        }
        
        public System.Threading.Tasks.Task<int> GetBalanceInOutAsync(int Idcode, int IDCur) {
            return base.Channel.GetBalanceInOutAsync(Idcode, IDCur);
        }
        
        public int UpdateAccountTotalInOut(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.UpdateAccountTotalInOut(IDCOde, Mony, idCurrncy);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccountTotalInOutAsync(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.UpdateAccountTotalInOutAsync(IDCOde, Mony, idCurrncy);
        }
        
        public int AddNewAccountDetalisInOut(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idcurrn) {
            return base.Channel.AddNewAccountDetalisInOut(idcode, monay, idsupply, idout, Detalis, d1, userid, idcurrn);
        }
        
        public System.Threading.Tasks.Task<int> AddNewAccountDetalisInOutAsync(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idcurrn) {
            return base.Channel.AddNewAccountDetalisInOutAsync(idcode, monay, idsupply, idout, Detalis, d1, userid, idcurrn);
        }
        
        public int DeleteSuuplyFrmAccountDitalis(int idSupply) {
            return base.Channel.DeleteSuuplyFrmAccountDitalis(idSupply);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSuuplyFrmAccountDitalisAsync(int idSupply) {
            return base.Channel.DeleteSuuplyFrmAccountDitalisAsync(idSupply);
        }
        
        public int DeleteSuuplyFrmAccountDitalis2(int idout) {
            return base.Channel.DeleteSuuplyFrmAccountDitalis2(idout);
        }
        
        public System.Threading.Tasks.Task<int> DeleteSuuplyFrmAccountDitalis2Async(int idout) {
            return base.Channel.DeleteSuuplyFrmAccountDitalis2Async(idout);
        }
        
        public int GetIDAccountPalce(int IDACcount, int idplace) {
            return base.Channel.GetIDAccountPalce(IDACcount, idplace);
        }
        
        public System.Threading.Tasks.Task<int> GetIDAccountPalceAsync(int IDACcount, int idplace) {
            return base.Channel.GetIDAccountPalceAsync(IDACcount, idplace);
        }
        
        public void SENDUSERTOSERVER(int falg, string name) {
            base.Channel.SENDUSERTOSERVER(falg, name);
        }
        
        public System.Threading.Tasks.Task SENDUSERTOSERVERAsync(int falg, string name) {
            return base.Channel.SENDUSERTOSERVERAsync(falg, name);
        }
        
        public int LoginUser(string User, string Pass) {
            return base.Channel.LoginUser(User, Pass);
        }
        
        public System.Threading.Tasks.Task<int> LoginUserAsync(string User, string Pass) {
            return base.Channel.LoginUserAsync(User, Pass);
        }
        
        public int AddNewUser(
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place, 
                    int UserID) {
            return base.Channel.AddNewUser(name, user, pass, Addsupply, UpdSupply, Addoutt, updOut, PrintSupply, PrintOut, PrintQuntity, UpdSupp1, UpdOut1, userAdd, Active, Cate, type1, account, Monay, Place, UserID);
        }
        
        public System.Threading.Tasks.Task<int> AddNewUserAsync(
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place, 
                    int UserID) {
            return base.Channel.AddNewUserAsync(name, user, pass, Addsupply, UpdSupply, Addoutt, updOut, PrintSupply, PrintOut, PrintQuntity, UpdSupp1, UpdOut1, userAdd, Active, Cate, type1, account, Monay, Place, UserID);
        }
        
        public int UpatePassword(int idUser, string Pass) {
            return base.Channel.UpatePassword(idUser, Pass);
        }
        
        public System.Threading.Tasks.Task<int> UpatePasswordAsync(int idUser, string Pass) {
            return base.Channel.UpatePasswordAsync(idUser, Pass);
        }
        
        public int UpdUsers(
                    int IDUser, 
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place) {
            return base.Channel.UpdUsers(IDUser, name, user, pass, Addsupply, UpdSupply, Addoutt, updOut, PrintSupply, PrintOut, PrintQuntity, UpdSupp1, UpdOut1, userAdd, Active, Cate, type1, account, Monay, Place);
        }
        
        public System.Threading.Tasks.Task<int> UpdUsersAsync(
                    int IDUser, 
                    string name, 
                    string user, 
                    string pass, 
                    bool Addsupply, 
                    bool UpdSupply, 
                    bool Addoutt, 
                    bool updOut, 
                    bool PrintSupply, 
                    bool PrintOut, 
                    bool PrintQuntity, 
                    bool UpdSupp1, 
                    bool UpdOut1, 
                    bool userAdd, 
                    bool Active, 
                    bool Cate, 
                    bool type1, 
                    bool account, 
                    bool Monay, 
                    bool Place) {
            return base.Channel.UpdUsersAsync(IDUser, name, user, pass, Addsupply, UpdSupply, Addoutt, updOut, PrintSupply, PrintOut, PrintQuntity, UpdSupp1, UpdOut1, userAdd, Active, Cate, type1, account, Monay, Place);
        }
        
        public System.IO.MemoryStream GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public System.IO.MemoryStream GetUser(int IdUs) {
            return base.Channel.GetUser(IdUs);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetUserAsync(int IdUs) {
            return base.Channel.GetUserAsync(IdUs);
        }
        
        public System.IO.MemoryStream GetAllAccount() {
            return base.Channel.GetAllAccount();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllAccountAsync() {
            return base.Channel.GetAllAccountAsync();
        }
        
        public System.IO.MemoryStream GetAllAcountnAr() {
            return base.Channel.GetAllAcountnAr();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllAcountnArAsync() {
            return base.Channel.GetAllAcountnArAsync();
        }
        
        public int UpdateAccountNm(int iDAccounNm, string Name, bool active) {
            return base.Channel.UpdateAccountNm(iDAccounNm, Name, active);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccountNmAsync(int iDAccounNm, string Name, bool active) {
            return base.Channel.UpdateAccountNmAsync(iDAccounNm, Name, active);
        }
        
        public bool CheckAccountinDetlis(int idcode) {
            return base.Channel.CheckAccountinDetlis(idcode);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccountinDetlisAsync(int idcode) {
            return base.Channel.CheckAccountinDetlisAsync(idcode);
        }
        
        public bool CheckAccounthaschalid(int idcode) {
            return base.Channel.CheckAccounthaschalid(idcode);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccounthaschalidAsync(int idcode) {
            return base.Channel.CheckAccounthaschalidAsync(idcode);
        }
        
        public string TypeAccount(int IDAccount) {
            return base.Channel.TypeAccount(IDAccount);
        }
        
        public System.Threading.Tasks.Task<string> TypeAccountAsync(int IDAccount) {
            return base.Channel.TypeAccountAsync(IDAccount);
        }
        
        public bool GetCheckAccount(int IDAccount) {
            return base.Channel.GetCheckAccount(IDAccount);
        }
        
        public System.Threading.Tasks.Task<bool> GetCheckAccountAsync(int IDAccount) {
            return base.Channel.GetCheckAccountAsync(IDAccount);
        }
        
        public bool GetCheckAccountHere(int IDAccount) {
            return base.Channel.GetCheckAccountHere(IDAccount);
        }
        
        public System.Threading.Tasks.Task<bool> GetCheckAccountHereAsync(int IDAccount) {
            return base.Channel.GetCheckAccountHereAsync(IDAccount);
        }
        
        public int GetMaxCode(int CodeParent) {
            return base.Channel.GetMaxCode(CodeParent);
        }
        
        public System.Threading.Tasks.Task<int> GetMaxCodeAsync(int CodeParent) {
            return base.Channel.GetMaxCodeAsync(CodeParent);
        }
        
        public int AddNewAcountNm(string AcountNm, int IdCOde, int IdParnt, string Type, int Active, System.DateTime DateStart, int UserId) {
            return base.Channel.AddNewAcountNm(AcountNm, IdCOde, IdParnt, Type, Active, DateStart, UserId);
        }
        
        public System.Threading.Tasks.Task<int> AddNewAcountNmAsync(string AcountNm, int IdCOde, int IdParnt, string Type, int Active, System.DateTime DateStart, int UserId) {
            return base.Channel.AddNewAcountNmAsync(AcountNm, IdCOde, IdParnt, Type, Active, DateStart, UserId);
        }
        
        public int DelteAccount(int IDCount) {
            return base.Channel.DelteAccount(IDCount);
        }
        
        public System.Threading.Tasks.Task<int> DelteAccountAsync(int IDCount) {
            return base.Channel.DelteAccountAsync(IDCount);
        }
        
        public int DelteAccount2(int IDcode) {
            return base.Channel.DelteAccount2(IDcode);
        }
        
        public System.Threading.Tasks.Task<int> DelteAccount2Async(int IDcode) {
            return base.Channel.DelteAccount2Async(IDcode);
        }
        
        public System.IO.MemoryStream SearchAcount(string name) {
            return base.Channel.SearchAcount(name);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> SearchAcountAsync(string name) {
            return base.Channel.SearchAcountAsync(name);
        }
        
        public System.IO.MemoryStream GETALLAccountPrime() {
            return base.Channel.GETALLAccountPrime();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GETALLAccountPrimeAsync() {
            return base.Channel.GETALLAccountPrimeAsync();
        }
        
        public System.IO.MemoryStream GETALLAccountSub() {
            return base.Channel.GETALLAccountSub();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GETALLAccountSubAsync() {
            return base.Channel.GETALLAccountSubAsync();
        }
        
        public System.IO.MemoryStream GetAllCurrency() {
            return base.Channel.GetAllCurrency();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCurrencyAsync() {
            return base.Channel.GetAllCurrencyAsync();
        }
        
        public System.IO.MemoryStream GetBalanceAccount(int IDcode, int IDCurrncy, string NmIDcurrmcy) {
            return base.Channel.GetBalanceAccount(IDcode, IDCurrncy, NmIDcurrmcy);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceAccountAsync(int IDcode, int IDCurrncy, string NmIDcurrmcy) {
            return base.Channel.GetBalanceAccountAsync(IDcode, IDCurrncy, NmIDcurrmcy);
        }
        
        public System.IO.MemoryStream GetBalanceAccountALLCunncy(int IDcode) {
            return base.Channel.GetBalanceAccountALLCunncy(IDcode);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceAccountALLCunncyAsync(int IDcode) {
            return base.Channel.GetBalanceAccountALLCunncyAsync(IDcode);
        }
        
        public string GETNMCurrncy(int IDCur) {
            return base.Channel.GETNMCurrncy(IDCur);
        }
        
        public System.Threading.Tasks.Task<string> GETNMCurrncyAsync(int IDCur) {
            return base.Channel.GETNMCurrncyAsync(IDCur);
        }
        
        public System.IO.MemoryStream GetBalanceALLAccountALLCunncy(int idcurrncy) {
            return base.Channel.GetBalanceALLAccountALLCunncy(idcurrncy);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetBalanceALLAccountALLCunncyAsync(int idcurrncy) {
            return base.Channel.GetBalanceALLAccountALLCunncyAsync(idcurrncy);
        }
        
        public System.IO.MemoryStream GETNMAccount(int IDCOde) {
            return base.Channel.GETNMAccount(IDCOde);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GETNMAccountAsync(int IDCOde) {
            return base.Channel.GETNMAccountAsync(IDCOde);
        }
        
        public System.IO.MemoryStream GETAccountDitalis(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2) {
            return base.Channel.GETAccountDitalis(IDcode, IDCurnncy, d1, d2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GETAccountDitalisAsync(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2) {
            return base.Channel.GETAccountDitalisAsync(IDcode, IDCurnncy, d1, d2);
        }
        
        public int getOldMony(int IDcode, int IDCurnncy, System.DateTime d2) {
            return base.Channel.getOldMony(IDcode, IDCurnncy, d2);
        }
        
        public System.Threading.Tasks.Task<int> getOldMonyAsync(int IDcode, int IDCurnncy, System.DateTime d2) {
            return base.Channel.getOldMonyAsync(IDcode, IDCurnncy, d2);
        }
        
        public System.IO.MemoryStream GETAcountDitlis(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2) {
            return base.Channel.GETAcountDitlis(IDcode, IDCurnncy, d1, d2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GETAcountDitlisAsync(int IDcode, int IDCurnncy, System.DateTime d1, System.DateTime d2) {
            return base.Channel.GETAcountDitlisAsync(IDcode, IDCurnncy, d1, d2);
        }
        
        public string GetUserNM(int IDuser) {
            return base.Channel.GetUserNM(IDuser);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNMAsync(int IDuser) {
            return base.Channel.GetUserNMAsync(IDuser);
        }
        
        public System.IO.MemoryStream GetGroupsAsAccounts() {
            return base.Channel.GetGroupsAsAccounts();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetGroupsAsAccountsAsync() {
            return base.Channel.GetGroupsAsAccountsAsync();
        }
        
        public System.IO.MemoryStream GetAccountesMOnayInGroup(int IDGroup) {
            return base.Channel.GetAccountesMOnayInGroup(IDGroup);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAccountesMOnayInGroupAsync(int IDGroup) {
            return base.Channel.GetAccountesMOnayInGroupAsync(IDGroup);
        }
        
        public bool CheckAccontTotal(int IDcode, int IDCurrncy) {
            return base.Channel.CheckAccontTotal(IDcode, IDCurrncy);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccontTotalAsync(int IDcode, int IDCurrncy) {
            return base.Channel.CheckAccontTotalAsync(IDcode, IDCurrncy);
        }
        
        public int GetBalance(int Idcode, int IDCur) {
            return base.Channel.GetBalance(Idcode, IDCur);
        }
        
        public System.Threading.Tasks.Task<int> GetBalanceAsync(int Idcode, int IDCur) {
            return base.Channel.GetBalanceAsync(Idcode, IDCur);
        }
        
        public int UpdateAccountTotal(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.UpdateAccountTotal(IDCOde, Mony, idCurrncy);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccountTotalAsync(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.UpdateAccountTotalAsync(IDCOde, Mony, idCurrncy);
        }
        
        public int AddNewAccountTotal(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.AddNewAccountTotal(IDCOde, Mony, idCurrncy);
        }
        
        public System.Threading.Tasks.Task<int> AddNewAccountTotalAsync(int IDCOde, int Mony, int idCurrncy) {
            return base.Channel.AddNewAccountTotalAsync(IDCOde, Mony, idCurrncy);
        }
        
        public int AddNewAccountDetalis(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idCurrnt, int IDSimple) {
            return base.Channel.AddNewAccountDetalis(idcode, monay, idsupply, idout, Detalis, d1, userid, idCurrnt, IDSimple);
        }
        
        public System.Threading.Tasks.Task<int> AddNewAccountDetalisAsync(int idcode, int monay, int idsupply, int idout, string Detalis, System.DateTime d1, int userid, int idCurrnt, int IDSimple) {
            return base.Channel.AddNewAccountDetalisAsync(idcode, monay, idsupply, idout, Detalis, d1, userid, idCurrnt, IDSimple);
        }
        
        public int AddSimpleConstraint(int IDdaan, int IdMAden, int Mony, int idCurnncy, int UserId, System.DateTime datetime, string Note) {
            return base.Channel.AddSimpleConstraint(IDdaan, IdMAden, Mony, idCurnncy, UserId, datetime, Note);
        }
        
        public System.Threading.Tasks.Task<int> AddSimpleConstraintAsync(int IDdaan, int IdMAden, int Mony, int idCurnncy, int UserId, System.DateTime datetime, string Note) {
            return base.Channel.AddSimpleConstraintAsync(IDdaan, IdMAden, Mony, idCurnncy, UserId, datetime, Note);
        }
        
        public int GetMaxIDSimpleConstraint() {
            return base.Channel.GetMaxIDSimpleConstraint();
        }
        
        public System.Threading.Tasks.Task<int> GetMaxIDSimpleConstraintAsync() {
            return base.Channel.GetMaxIDSimpleConstraintAsync();
        }
        
        public System.IO.MemoryStream GetAllSimpleConstraintOneDay(System.DateTime day1, System.DateTime day2) {
            return base.Channel.GetAllSimpleConstraintOneDay(day1, day2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllSimpleConstraintOneDayAsync(System.DateTime day1, System.DateTime day2) {
            return base.Channel.GetAllSimpleConstraintOneDayAsync(day1, day2);
        }
        
        public System.IO.MemoryStream PrintRequstOut(int Check, int UserId, int user) {
            return base.Channel.PrintRequstOut(Check, UserId, user);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> PrintRequstOutAsync(int Check, int UserId, int user) {
            return base.Channel.PrintRequstOutAsync(Check, UserId, user);
        }
        
        public System.IO.MemoryStream printrequstOutExit(int Check, int UserId, int user) {
            return base.Channel.printrequstOutExit(Check, UserId, user);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> printrequstOutExitAsync(int Check, int UserId, int user) {
            return base.Channel.printrequstOutExitAsync(Check, UserId, user);
        }
        
        public int GetIdUser(string NameUser) {
            return base.Channel.GetIdUser(NameUser);
        }
        
        public System.Threading.Tasks.Task<int> GetIdUserAsync(string NameUser) {
            return base.Channel.GetIdUserAsync(NameUser);
        }
        
        public System.IO.MemoryStream GetCatagoryInAccount() {
            return base.Channel.GetCatagoryInAccount();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetCatagoryInAccountAsync() {
            return base.Channel.GetCatagoryInAccountAsync();
        }
        
        public int GetAccountLinkCate(int IDcate) {
            return base.Channel.GetAccountLinkCate(IDcate);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountLinkCateAsync(int IDcate) {
            return base.Channel.GetAccountLinkCateAsync(IDcate);
        }
        
        public System.IO.MemoryStream GetAllPlace() {
            return base.Channel.GetAllPlace();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllPlaceAsync() {
            return base.Channel.GetAllPlaceAsync();
        }
        
        public System.IO.MemoryStream GetAllDebit() {
            return base.Channel.GetAllDebit();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllDebitAsync() {
            return base.Channel.GetAllDebitAsync();
        }
        
        public System.IO.MemoryStream GetAllCreditor() {
            return base.Channel.GetAllCreditor();
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCreditorAsync() {
            return base.Channel.GetAllCreditorAsync();
        }
        
        public System.IO.MemoryStream SearchINRequstOutDate(System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequstOutDate(d1, d2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequstOutDateAsync(System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequstOutDateAsync(d1, d2);
        }
        
        public System.IO.MemoryStream GetTypeInAccount(int IdCate) {
            return base.Channel.GetTypeInAccount(IdCate);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetTypeInAccountAsync(int IdCate) {
            return base.Channel.GetTypeInAccountAsync(IdCate);
        }
        
        public System.IO.MemoryStream GetCurrencyINAccount(int idcat, int idtyp) {
            return base.Channel.GetCurrencyINAccount(idcat, idtyp);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetCurrencyINAccountAsync(int idcat, int idtyp) {
            return base.Channel.GetCurrencyINAccountAsync(idcat, idtyp);
        }
        
        public System.IO.MemoryStream GetAccountIDs(int IdCAte, int IdTpe, int idcurrnt) {
            return base.Channel.GetAccountIDs(IdCAte, IdTpe, idcurrnt);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAccountIDsAsync(int IdCAte, int IdTpe, int idcurrnt) {
            return base.Channel.GetAccountIDsAsync(IdCAte, IdTpe, idcurrnt);
        }
        
        public int GetMaxCheckInRequsetOut() {
            return base.Channel.GetMaxCheckInRequsetOut();
        }
        
        public System.Threading.Tasks.Task<int> GetMaxCheckInRequsetOutAsync() {
            return base.Channel.GetMaxCheckInRequsetOutAsync();
        }
        
        public int GetQuntityInAccount(int IDAcount) {
            return base.Channel.GetQuntityInAccount(IDAcount);
        }
        
        public System.Threading.Tasks.Task<int> GetQuntityInAccountAsync(int IDAcount) {
            return base.Channel.GetQuntityInAccountAsync(IDAcount);
        }
        
        public int GetPriceAccount(int iDAccount) {
            return base.Channel.GetPriceAccount(iDAccount);
        }
        
        public System.Threading.Tasks.Task<int> GetPriceAccountAsync(int iDAccount) {
            return base.Channel.GetPriceAccountAsync(iDAccount);
        }
        
        public int UpdateQuntityAccount(int IDAccount, int newquntity) {
            return base.Channel.UpdateQuntityAccount(IDAccount, newquntity);
        }
        
        public System.Threading.Tasks.Task<int> UpdateQuntityAccountAsync(int IDAccount, int newquntity) {
            return base.Channel.UpdateQuntityAccountAsync(IDAccount, newquntity);
        }
        
        public int AddNewRequstOut(int Quntity, int IDCategory, int IDType, int idcurrnt, int IDPlace, string NameOut, string DesOut, System.DateTime DateOut, int Chack, string NameSend, int price, int UserId, int debit, int cred) {
            return base.Channel.AddNewRequstOut(Quntity, IDCategory, IDType, idcurrnt, IDPlace, NameOut, DesOut, DateOut, Chack, NameSend, price, UserId, debit, cred);
        }
        
        public System.Threading.Tasks.Task<int> AddNewRequstOutAsync(int Quntity, int IDCategory, int IDType, int idcurrnt, int IDPlace, string NameOut, string DesOut, System.DateTime DateOut, int Chack, string NameSend, int price, int UserId, int debit, int cred) {
            return base.Channel.AddNewRequstOutAsync(Quntity, IDCategory, IDType, idcurrnt, IDPlace, NameOut, DesOut, DateOut, Chack, NameSend, price, UserId, debit, cred);
        }
        
        public int GetAndCheckQuntityAccountAndAddRqustNew(
                    int IDAccount, 
                    int QuntityMust, 
                    int IDCategory, 
                    int IDType, 
                    int idcurrn, 
                    int IDPlace, 
                    string NameOut, 
                    string DesOut, 
                    System.DateTime DateOut, 
                    int Chack, 
                    string NameSend, 
                    int debit, 
                    int credi, 
                    int UserId, 
                    string NMIDCA, 
                    string NMTYpe, 
                    string NMPlus, 
                    string NMMins, 
                    string nmCurnncy) {
            return base.Channel.GetAndCheckQuntityAccountAndAddRqustNew(IDAccount, QuntityMust, IDCategory, IDType, idcurrn, IDPlace, NameOut, DesOut, DateOut, Chack, NameSend, debit, credi, UserId, NMIDCA, NMTYpe, NMPlus, NMMins, nmCurnncy);
        }
        
        public System.Threading.Tasks.Task<int> GetAndCheckQuntityAccountAndAddRqustNewAsync(
                    int IDAccount, 
                    int QuntityMust, 
                    int IDCategory, 
                    int IDType, 
                    int idcurrn, 
                    int IDPlace, 
                    string NameOut, 
                    string DesOut, 
                    System.DateTime DateOut, 
                    int Chack, 
                    string NameSend, 
                    int debit, 
                    int credi, 
                    int UserId, 
                    string NMIDCA, 
                    string NMTYpe, 
                    string NMPlus, 
                    string NMMins, 
                    string nmCurnncy) {
            return base.Channel.GetAndCheckQuntityAccountAndAddRqustNewAsync(IDAccount, QuntityMust, IDCategory, IDType, idcurrn, IDPlace, NameOut, DesOut, DateOut, Chack, NameSend, debit, credi, UserId, NMIDCA, NMTYpe, NMPlus, NMMins, nmCurnncy);
        }
        
        public int GetQunitiyinAccount2(int Idcae, int IdType, int idcurrnt) {
            return base.Channel.GetQunitiyinAccount2(Idcae, IdType, idcurrnt);
        }
        
        public System.Threading.Tasks.Task<int> GetQunitiyinAccount2Async(int Idcae, int IdType, int idcurrnt) {
            return base.Channel.GetQunitiyinAccount2Async(Idcae, IdType, idcurrnt);
        }
        
        public System.IO.MemoryStream SearchINRequsetOuttxt(string s) {
            return base.Channel.SearchINRequsetOuttxt(s);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOuttxtAsync(string s) {
            return base.Channel.SearchINRequsetOuttxtAsync(s);
        }
        
        public System.IO.MemoryStream SearchINRequsetOutTxtAndDate(int s, System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequsetOutTxtAndDate(s, d1, d2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOutTxtAndDateAsync(int s, System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequsetOutTxtAndDateAsync(s, d1, d2);
        }
        
        public System.IO.MemoryStream SearchINRequsetOutTxtAndDate2(string s, System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequsetOutTxtAndDate2(s, d1, d2);
        }
        
        public System.Threading.Tasks.Task<System.IO.MemoryStream> SearchINRequsetOutTxtAndDate2Async(string s, System.DateTime d1, System.DateTime d2) {
            return base.Channel.SearchINRequsetOutTxtAndDate2Async(s, d1, d2);
        }
    }
}
